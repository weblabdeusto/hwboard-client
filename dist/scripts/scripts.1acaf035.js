"use strict";function MainController(a,b,c,d){function e(b){d.debug("Status update: "+b),b!=a.status&&(a.status=b,a.$apply())}function f(a){d.debug("Led update: "+a)}function g(b){d.debug("Virtualmodel update: "+b),a.$broadcast("virtualmodel-status-report",b)}function h(a,c){l(a),statusUpdater.start(),ledUpdater.start(),virtualmodelUpdater.start();var d=sprintf("VIRTUALWORLD_MODEL %s",b.VIRTUALMODEL);weblab.sendCommand(d).done(i).fail(j)}function i(a){d.debug("VirtualModel set: "+a)}function j(a){d.debug("VirtualModel set failure: "+a)}function k(){statusUpdater.stop(),a.time=0}function l(b){d.debug("TIME IS: "+b),a.time=b}statusUpdater=c.get("statusUpdater"),statusUpdater.setOnStatusUpdate(e),ledUpdater=c.get("ledUpdater"),ledUpdater.setOnLedUpdate(f),virtualmodelUpdater=c.get("virtualmodelUpdater"),virtualmodelUpdater.setOnVirtualmodelUpdate(g),d.debug("HW board experiment main controller"),weblab.onStart(h),weblab.onFinish(k),a.time=0}function WebcamController(a,b){function c(){f(function(){d()},100)}function d(){var b=URI(a.src);b.query({rnd:1e5*Math.random()}),a.src=b.toString()}var e=this,f=b.get("$timeout");e.programRefresh=c}function wlWebcam(){function a(a,b,c,d){function e(){d.programRefresh()}b.find("img").bind("load error",e)}return{restrict:"E",scope:{src:"@src"},templateUrl:"main/webcam/webcam.directive.html",controller:"WebcamController",controllerAs:"webcamController",link:a}}function StatusController(a,b){function c(){return void 0==a.status?"You need to Reserve the experiment before using it. Please, click on the Reserve button below.":"not_ready"==a.status?"You will probably want to upload your logic file before interacting with the board.":"[STATUS: "+a.status+"] "+a.message}a.getDisplay=c}function wlStatus(a){function b(a,b,c,d){}return{restrict:"E",templateUrl:"main/status/status.directive.html",link:b,controller:"StatusController",controllerAs:"statusController",scope:{status:"=status",message:"=message"}}}function wlButton(a){function b(a,b,c,d){}return{restrict:"E",templateUrl:"main/button/button.directive.html",link:b,controller:"ButtonController",controllerAs:"buttonController",scope:{ident:"@ident",caption:"@caption",overlay:"@overlay",delay:"=delay"}}}function ButtonController(a,b,c,d){function e(){a.ongoingCommand||(a.ongoingCommand=!0,c.debug("Button "+a.ident+" pressed."),a.isPressed=!0,weblab.sendCommand("SetPulse on "+a.ident).done(f).fail(g))}function f(b){c.debug("[Button] SetPulse ON"),a.isOn=!0,a.isPressed=!1;var e=a.delay;void 0==e&&(c.error("[BUTTON]: Please define a button delay. Meanwhile setting it to 1000 ms"),e=1e3),d(function(){weblab.sendCommand("SetPulse off "+a.ident).done(function(b){c.debug("[Button] SetPulse OFF"),a.isOn=!1,a.isPressed=!1,a.ongoingCommand=!1,a.$apply()}).fail(function(b){c.error("SetPulse failed (while sending button pulse)"),c.error(b),a.ongoingCommand=!1,a.isPressed=!1,a.$apply()})},e),a.$apply()}function g(b){c.error("SetPulse failed"),a.ongoingCommand=!1,a.isPressed=!1,a.$apply()}a.button={},a.isOn=!1,a.isPressed=!1,a.ongoingCommand=!1,a.press=e}function wlSwitch(a){function b(a,b,c,d){}return{restrict:"E",templateUrl:"main/switch/switch.directive.html",link:b,controller:"SwitchController",controllerAs:"switchController",scope:{ident:"@ident",caption:"@caption",overlay:"@overlay"}}}function SwitchController(a,b,c,d){function e(){if(!a.ongoingCommand){a.ongoingCommand=!0,c.debug("Switch "+a.ident+" pressed."),a.isPressed=!0;var b=a.isOn?"off":"on";weblab.sendCommand("ChangeSwitch "+b+" "+a.ident).done(f).fail(g)}}function f(b){c.debug("ChangeSwitch succeeded"),a.isOn=!a.isOn,a.isPressed=!1,a.ongoingCommand=!1,a.$apply()}function g(b){c.error("SetPulse failed"),a.ongoingCommand=!1,a.isPressed=!1,a.$apply()}a.button={},a.isOn=!1,a.isPressed=!1,a.ongoingCommand=!1,a.press=e}function statusUpdater(a,b,c){function d(a){l=a}function e(){k=c(g,j)}function f(){c.cancel(k)}function g(){weblab.sendCommand("STATE").done(h).fail(i)}function h(a){if(b.debug("SUCCESS: STATUS: "+a),void 0!=l){var d=a.substring(6);l(d)}k=c(g,j)}function i(a){b.error("ERROR: sendCommand (status)"),b.error(a),k=c(g,j)}var j=2e3,k=void 0,l=void 0;return{start:e,stop:f,setOnStatusUpdate:d}}function virtualmodelUpdater(a,b,c){function d(a){l=a}function e(){k=c(g,j)}function f(){c.cancel(k)}function g(){weblab.sendCommand("VIRTUALWORLD_STATE").done(h).fail(i)}function h(a){if(b.debug("SUCCESS: VM STATUS: "+a),void 0!=l){var d=JSON.parse(a);l(d)}k=c(g,j)}function i(a){b.error("ERROR: sendCommand (status)"),b.error(a),k=c(g,j)}var j=2e3,k=void 0,l=void 0;return{start:e,stop:f,setOnVirtualmodelUpdate:d}}function ledUpdater(a,b,c){function d(a){l=a}function e(){k=c(g,j)}function f(){c.cancel(k)}function g(){weblab.sendCommand("READ_LEDS").done(h).fail(i)}function h(a){if(b.debug("SUCCESS: READ_LEDS: "+a),void 0!=l){var d=a;l(d)}k=c(g,j)}function i(a){b.error("ERROR: sendCommand (read_leds)"),b.error(a),k=c(g,j)}var j=2e3,k=void 0,l=void 0;return{start:e,stop:f,setOnLedUpdate:d}}function TimerController(a,b,c){function d(b,c){return 0>b?void(a.time=0):(0==c&&h.startDecreasing(),void(0==b&&h.stopDecreasing()))}function e(){a.time>0&&(a.time-=1)}function f(){c.cancel(h._interval),h._interval=c(e,1e3)}function g(){c.cancel(h._interval)}var h=this;a.$watch("time",d),h.startDecreasing=f,h.stopDecreasing=g}function wlTimer(){return{restrict:"E",templateUrl:"main/timer/timer.directive.html",controller:"TimerController",controllerAs:"timerController",link:wlTimerLink,scope:{time:"=time"}}}function wlTimerLink(a,b,c,d){}function ClockControlController(a,b){function c(){return a.activated}function d(){b.debug("Activating clock"),a.runningCommand=!0,weblab.sendCommand("ClockActivation on "+a.frequency).done(function(c){b.debug("Clock activated"),a.activated=!0,a.runningCommand=!1,a.$apply()}).fail(function(b){a.activated=!1,a.runningCommand=!1,a.$apply()})}function e(){b.debug("Deactivating clock"),a.runningCommand=!0,weblab.sendCommand("ClockActivation off ").done(function(c){b.debug("Clock deactivated"),a.activated=!1,a.runningCommand=!1,a.$apply()}).fail(function(b){a.activated=!1,a.runningCommand=!1,a.$apply()}),a.activated=!1}a.activated=!1,a.runningCommand=!1,a.frequency=1e3,a.isActivated=c,a.activate=d,a.deactivate=e}function wlClockControl(){function a(a,b,c,d){}return{restrict:"E",controller:"ClockControlController",controllerAs:"clockControlController",templateUrl:"main/clock/clock-control.directive.html",link:a,scope:{}}}function wlVirtualModel(){function a(a,b,c){function d(){return $(e)}var e=b.find("iframe");a.getIframeElement=d}return{restrict:"E",templateUrl:"main/virtual-model/virtual-model.directive.html",controller:"VirtualModelController",controllerAs:"virtualModelController",link:a,scope:{}}}function VirtualModelController(a){function b(b,c){var d=a.getIframeElement(),e=d[0];e.contentWindow.postMessage({message:"virtualmodel-status",data:c},"*")}a.$on("virtualmodel-status-report",b)}angular.module("hwboard",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.slider","angular.vertilize"]).run(["$rootScope",function(a){try{a.VIRTUALMODEL=Weblab.getProperty("virtualmodel")}catch(b){console.log("VirtualModel blank because 'virtualmodel' client property is not defined"),a.VIRTUALMODEL=""}}]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"main/main.html",controller:"MainController"}).when("/about",{templateUrl:"main/about.html",controller:"AboutController"}).otherwise({redirectTo:"/"})}]),angular.module("hwboard").controller("MainController",MainController),MainController.$inject=["$scope","$rootScope","$injector","$log"],angular.module("hwboard").controller("AboutController",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("hwboard").controller("WebcamController",WebcamController),WebcamController.$inject=["$scope","$injector"],angular.module("hwboard").directive("wlWebcam",wlWebcam),angular.module("hwboard").controller("StatusController",StatusController),StatusController.$inject=["$scope","$injector"],angular.module("hwboard").directive("wlStatus",wlStatus),wlStatus.$inject=["$injector"],angular.module("hwboard").directive("wlButton",wlButton),wlButton.$inject=["$injector"],angular.module("hwboard").controller("ButtonController",ButtonController),ButtonController.$inject=["$scope","$injector","$log","$timeout"],angular.module("hwboard").directive("wlSwitch",wlSwitch),wlSwitch.$inject=["$injector"],angular.module("hwboard").controller("SwitchController",SwitchController),SwitchController.$inject=["$scope","$injector","$log","$timeout"],angular.module("hwboard").factory("statusUpdater",statusUpdater),statusUpdater.$inject=["$injector","$log","$timeout"],angular.module("hwboard").factory("virtualmodelUpdater",virtualmodelUpdater),virtualmodelUpdater.$inject=["$injector","$log","$timeout"],angular.module("hwboard").factory("ledUpdater",ledUpdater),ledUpdater.$inject=["$injector","$log","$timeout"],angular.module("hwboard").controller("TimerController",TimerController),TimerController.$inject=["$scope","$injector","$interval"],angular.module("hwboard").directive("wlTimer",wlTimer),angular.module("hwboard").filter("secondsToDateTime",[function(){return function(a){return new Date(1970,0,1).setSeconds(a)}}]),angular.module("hwboard").controller("ClockControlController",ClockControlController),ClockControlController.$inject=["$scope","$log"],angular.module("hwboard").directive("wlClockControl",wlClockControl),angular.module("hwboard").directive("wlVirtualModel",wlVirtualModel),angular.module("hwboard").controller("VirtualModelController",VirtualModelController),VirtualModelController.$inject=["$scope"];